services:
  db:
    image: imresamu/postgis-arm64
    platform: linux/arm64/v8
    env_file: ./docker/db/.env
    volumes:
      - ./docker/data/db:/var/lib/postgresql/data
      - ./docker/db/health-check.sh:/bin/health-check.sh
    healthcheck:
      test: ["CMD", "health-check.sh"]
      interval: 3s
      timeout: 5s
      retries: 10

  cache:
    image: redis:6
    platform: linux/arm64/v8
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  directus:
    build:
      context: ./docker/directus
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    env_file: ./src/directus/.env
    volumes:
      - ./src/directus/uploads:/directus/uploads
      - ./src/directus/extensions:/directus/extensions
      - ./src/directus/schema/:/directus/schema
      - ./src/directus/roles/:/directus/roles
      - ./src/directus/presets/:/directus/presets
      - ./src/directus/webhooks/:/directus/webhooks
      - ./src/directus/translations/:/directus/translations
      - ./src/directus/flows/:/directus/flows
      - ./src/directus/settings/:/directus/settings
      - ./src/directus/contents/:/directus/contents
      - ./src/directus/cli/:/directus/cli
      - ./src/directus/cli/bash-completion.sh:/home/node/.bashrc
      - ./src/directus/.env/:/directus/.env
    depends_on:
      cache:
        condition: service_healthy
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./docker/frontend
      args:
        - "UID=${UID:-1000}"
        - "GID=${GID:-1000}"
    volumes:
      - ./src/frontend:/frontend
    env_file: ./src/frontend/.env
    depends_on:
    - directus

  portainer:
    image: portainer/portainer-ce:latest
    platform: linux/arm64/v8
    ports:
      - 9443:9443
    volumes:
      - ./docker/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/certbot/www:/var/www/certbot:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
      - directus

  certbot:
    image: certbot/certbot
    volumes:
      - ./docker/certbot/www:/var/www/certbot
      - ./docker/certbot/conf:/etc/letsencrypt
    depends_on:
      - nginx
    entrypoint: >
      sh -c "
        if [ ! -d '/etc/letsencrypt/live/test.stadt-land-klima-bz.ydns.eu' ]; then
          certbot certonly --webroot --staging -w /var/www/certbot \
            -d test.stadt-land-klima-bz.ydns.eu \
            -m kierkilian@gmail.com --agree-tos --non-interactive
        fi
        while :; do certbot renew; sleep 12h; done
      "

